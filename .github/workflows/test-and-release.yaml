name: Test and Release

on: push

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  # same as AWS_REGION
  AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  WEBAPP_STACK_NAME: ${{ secrets.WEBAPP_STACK_NAME }}

jobs:
  test-and-release:
    runs-on: ubuntu-22.04

    environment: production

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"

      - name: Keep npm cache around to speed up installs
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci --no-audit

      - name: Get web app configuration
        run: node .github/workflows/web-app-config.js >> $GITHUB_ENV

      - name: Install playwright
        run: npx playwright install

      - name: Compile TypeScript
        run: npx tsc

      - name: Run unit tests
        run: npm test

      - name: Build
        env:
          PUBLIC_VERSION: ${{ github.sha }}
        run: npm run build

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: asset-tracker-cloud-app-aws-${{ github.sha }}
          path: build

      - name: Start server
        run: npx node-static build > server.log 2>&1 &

      - name: Wait for server to be up
        run: until nc -w 10 127.0.0.1 8080; do sleep 1; done

      - name: Run end-to-end tests
        run: npm run test:e2e

      - name: Cleanup test artifacts
        if: ${{ failure() }}
        run: |
          aws iot delete-thing --thing-name `cat test-session/asset.json | jq -r '.thingName'`
          aws iot delete-thing --thing-name `cat test-session/asset-no-gnss.json | jq -r '.thingName'`

      - name: Cleanup old assets
        run: npx tsx e2e-tests/clean-up/cleanOldAssets.ts

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-artifacts-${{ github.sha }}
          path: |
            server.log
            test-session

      - name: Semantic release
        continue-on-error: true
        run: npx semantic-release
